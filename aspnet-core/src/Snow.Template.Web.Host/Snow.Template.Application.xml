<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Snow.Template.Application</name>
    </assembly>
    <members>
        <member name="F:Snow.Template.AppConsts.DefaultPageSize">
            <summary>
            Default page size for paged requests.
            </summary>
        </member>
        <member name="F:Snow.Template.AppConsts.MaxPageSize">
            <summary>
            Maximum allowed page size for paged requests.
            </summary>
        </member>
        <member name="F:Snow.Template.AppConsts.DefaultPassPhrase">
            <summary>
            Default pass phrase for SimpleStringCipher decrypt/encrypt operations
            </summary>
        </member>
        <member name="T:Snow.Template.Auditing.AuditLogAndUser">
            <summary>
            A helper class to store an <see cref="P:Snow.Template.Auditing.AuditLogAndUser.AuditLog"/> and a <see cref="P:Snow.Template.Auditing.AuditLogAndUser.User"/> object.
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemCacheItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemCacheItem.PermissionName">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemCacheItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemCacheItem.Route">
            <summary>
            路由
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemCacheItem.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemEditDto.ParentId">
            <summary>
            父菜单
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemEditDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemEditDto.PermissionName">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemEditDto.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemEditDto.Route">
            <summary>
            路由
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemListDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemListDto.PermissionName">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemListDto.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemListDto.Route">
            <summary>
            路由
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemListDto.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MenuItems.Dto.MenuItemSelectListDto.IsSelected">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="M:Snow.Template.Authorization.MenuItems.MenuItemAppService.GetMenuItemsFilteredQuery(Snow.Template.Authorization.MenuItems.Dto.IGetMenuItemsInput)">
            <summary>
            获取菜单过滤查询
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Snow.Template.Authorization.MultiTenancy.Dto.GetTenantsInput">
            <summary>
            分页查询租户
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MultiTenancy.Dto.GetTenantsInput.IsActive">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:Snow.Template.Authorization.MultiTenancy.Dto.TenantEditDto">
            <summary>
            租户编辑
            </summary>
        </member>
        <member name="T:Snow.Template.Authorization.MultiTenancy.Dto.TenantListDto">
            <summary>
            租户列表数据
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MultiTenancy.Dto.TenantListDto.TenancyName">
            <summary>
            租户标识
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MultiTenancy.Dto.TenantListDto.Name">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.MultiTenancy.Dto.TenantListDto.IsActive">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:Snow.Template.Authorization.MultiTenancy.ITenantAppService">
            <summary>
            租户管理
            </summary>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.ITenantAppService.GetPagedAsync(Snow.Template.Authorization.MultiTenancy.Dto.GetTenantsInput)">
            <summary>
            分页查询
            </summary>
            <param name="input">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.ITenantAppService.GetForEditAsync(Abp.Application.Services.Dto.NullableIdDto{System.Int32})">
            <summary>
            获取详情
            </summary>
            <param name="input">Id</param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.ITenantAppService.CreateAsync(Snow.Template.Authorization.MultiTenancy.Dto.CreateTenantInput)">
            <summary>
            创建
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.ITenantAppService.UpdateAsync(Snow.Template.Authorization.MultiTenancy.Dto.TenantEditDto)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.ITenantAppService.DeleteAsync(Abp.Application.Services.Dto.EntityDto)">
            <summary>
            删除
            </summary>
            <param name="input">Id</param>
            <returns></returns>
        </member>
        <member name="T:Snow.Template.Authorization.MultiTenancy.TenantAppService">
            <summary>
            租户管理
            </summary>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.TenantAppService.#ctor(AutoMapper.IMapper,Abp.Domain.Repositories.IRepository{Snow.Template.Authorization.MultiTenancy.Tenant,System.Int32},Snow.Template.Authorization.MultiTenancy.TenantManager,Snow.Template.Editions.EditionManager,Snow.Template.Authorization.Users.UserManager,Snow.Template.Authorization.Roles.RoleManager,Abp.MultiTenancy.IAbpZeroDbMigrator)">
            <summary>
            构造
            </summary>
            <param name="mapper"></param>
            <param name="repository"></param>
            <param name="tenantManager"></param>
            <param name="editionManager"></param>
            <param name="userManager"></param>
            <param name="roleManager"></param>
            <param name="abpZeroDbMigrator"></param>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.TenantAppService.GetPagedAsync(Snow.Template.Authorization.MultiTenancy.Dto.GetTenantsInput)">
            <summary>
            分页查询
            </summary>
            <param name="input">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.TenantAppService.GetForEditAsync(Abp.Application.Services.Dto.NullableIdDto{System.Int32})">
            <summary>
            获取详情
            </summary>
            <param name="input">Id</param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.TenantAppService.CreateAsync(Snow.Template.Authorization.MultiTenancy.Dto.CreateTenantInput)">
            <summary>
            创建
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.TenantAppService.UpdateAsync(Snow.Template.Authorization.MultiTenancy.Dto.TenantEditDto)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.TenantAppService.DeleteAsync(Abp.Application.Services.Dto.EntityDto)">
            <summary>
            删除
            </summary>
            <param name="input">Id</param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.MultiTenancy.TenantAppService.GetTenantsFilteredQuery(Snow.Template.Authorization.MultiTenancy.Dto.GetTenantsInput)">
            <summary>
            过滤条件
            </summary>
            <param name="input">查询条件</param>
            <returns></returns>
        </member>
        <member name="P:Snow.Template.Authorization.Roles.Dto.FlatPermissionDto.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="M:Snow.Template.Authorization.Roles.RoleAppService.GetRolesFilteredQuery(Snow.Template.Authorization.Roles.Dto.IGetRolesInput)">
            <summary>
            获取用户过滤查询
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:Snow.Template.Authorization.Users.Dto.UserEditDto.Id">
            <summary>
            Set null to create a new user. Set user's Id to update a user
            </summary>
        </member>
        <member name="P:Snow.Template.Authorization.Users.Dto.UserListDto.ProfilePictureId">
            <summary>
            头像
            </summary>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.GetPagedAsync(Snow.Template.Authorization.Users.Dto.GetUsersInput)">
            <summary>
            分页
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.GetToExcelAsync(Snow.Template.Authorization.Users.Dto.GetUsersToExcelInput)">
            <summary>
            导出
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.GetForEditAsync(Abp.Application.Services.Dto.NullableIdDto{System.Int64})">
            <summary>
            获取详细
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.CreateOrUpdateAsync(Snow.Template.Authorization.Users.Dto.CreateOrUpdateUserInput)">
            <summary>
            添加或修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.DeleteAsync(Abp.Application.Services.Dto.EntityDto{System.Int64})">
            <summary>
            删除
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.GetRolesAsync">
            <summary>
            获取角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.ChangeLanguageAsync(Snow.Template.Authorization.Users.Dto.ChangeUserLanguageDto)">
            <summary>
            修改语言
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.ChangePasswordAsync(Snow.Template.Authorization.Users.Dto.ChangePasswordDto)">
            <summary>
            修改密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.ResetPasswordAsync(Snow.Template.Authorization.Users.Dto.ResetPasswordDto)">
            <summary>
            重置密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.GetHeadImageAsync">
            <summary>
            获取用户头像
            </summary>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.IUserAppService.UpdateHeadImage(Snow.Template.Authorization.Users.Dto.UpdateHeadImageInput)">
            <summary>
            修改用户头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.Profile.IProfileAppService.UpdateProfilePicture(Snow.Template.Authorization.Users.Profile.Dto.UpdateHeadImageInputInput)">
            <summary>
            修改用户头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.Profile.ProfileAppService.UpdateProfilePicture(Snow.Template.Authorization.Users.Profile.Dto.UpdateHeadImageInputInput)">
            <summary>
            修改用户头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.UserAppService.GetForEditAsync(Abp.Application.Services.Dto.NullableIdDto{System.Int64})">
            <summary>
            获取用户修改信息
            </summary>
            <param name="input">id</param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.UserAppService.CreateOrUpdateAsync(Snow.Template.Authorization.Users.Dto.CreateOrUpdateUserInput)">
            <summary>
            添加或修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.UserAppService.GetUsersFilteredQuery(Snow.Template.Authorization.Users.Dto.IGetUsersInput)">
            <summary>
            获取用户过滤查询
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.UserAppService.FillRoleNamesAsync(System.Collections.Generic.IReadOnlyCollection{Snow.Template.Authorization.Users.Dto.UserListDto})">
            <summary>
            添加角色信息
            </summary>
            <param name="userListDtos"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.UserAppService.UpdateHeadImage(Snow.Template.Authorization.Users.Dto.UpdateHeadImageInput)">
            <summary>
            修改用户头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.Template.Authorization.Users.UserAppService.GetHeadImageAsync">
            <summary>
            获取用户头像
            </summary>
            <returns></returns>
        </member>
        <member name="P:Snow.Template.Localization.Dto.ApplicationLanguageEditDto.IsEnabled">
            <summary>
            Mapped from Language.IsDisabled with using manual mapping in CustomDtoMapper.cs
            </summary>
        </member>
        <member name="T:Snow.Template.Net.MimeTypes.MimeTypeNames">
            <summary>
            Common mime types. 
            </summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXJavascript">
            <summary>Used to denote the encoding necessary for files containing JavaScript source code. The alternative MIME type for this file type is text/javascript.</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioL24">
            <summary>24bit Linear PCM audio at 8-48kHz, 1-N channels; Defined in RFC 3190</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXShockwaveFlash">
            <summary>Adobe Flash files for example with the extension .swf</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationOctetStream">
            <summary>Arbitrary binary data.[5] Generally speaking this type identifies files that are not associated with a specific application. Contrary to past assumptions by software packages such as Apache this is not a type that should be applied to unknown files. In such a case, a server or application should not indicate a content type, as it may be incorrect, but rather, should omit the type in order to allow the recipient to guess the type.[6]</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationAtomXml">
            <summary>Atom feeds</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextCss">
            <summary>Cascading Style Sheets; Defined in RFC 2318</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextCmd">
            <summary>commands; subtype resident in Gecko browsers like Firefox 3.5</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextCsv">
            <summary>Comma-separated values; Defined in RFC 4180</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXDeb">
            <summary>deb (file format), a software package format used by the Debian project</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MultipartEncrypted">
            <summary>Defined in RFC 1847</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MultipartSigned">
            <summary>Defined in RFC 1847</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MessageHttp">
            <summary>Defined in RFC 2616</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ModelExample">
            <summary>Defined in RFC 4735</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXDvi">
            <summary>device-independent document in DVI format</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXmlDtd">
            <summary>DTD files; Defined by RFC 3023</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationJavascript" -->
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationEcmascript">
            <summary>ECMAScript/JavaScript; Defined in RFC 4329 (equivalent to application/javascript but with stricter processing rules)</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationEdifact">
            <summary>EDI EDIFACT data; Defined in RFC 1767</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationEdiX12">
            <summary>EDI X12 data; Defined in RFC 1767</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MessagePartial">
            <summary>Email; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MessageRfc822">
            <summary>Email; EML files, MIME files, MHT files, MHTML files; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextXml">
            <summary>Extensible Markup Language; Defined in RFC 3023</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.VideoXFlv">
            <summary>Flash video (FLV files)</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ImageGif">
            <summary>GIF image; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextXGwtRpc">
            <summary>GoogleWebToolkit data</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXGzip">
            <summary>Gzip</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextHtml">
            <summary>HTML; Defined in RFC 2854</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ImageVndMicrosoftIcon">
            <summary>ICO image; Registered[9]</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ModelIges">
            <summary>IGS files, IGES files; Defined in RFC 2077</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MessageImdnXml">
            <summary>IMDN Instant Message Disposition Notification; Defined in RFC 5438</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationJson">
            <summary>JavaScript Object Notation JSON; Defined in RFC 4627</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationJsonPatch">
            <summary>JavaScript Object Notation (JSON) Patch; Defined in RFC 6902</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextJavascript" -->
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ImagePjpeg">
            <summary>JPEG JFIF image; Associated with Internet Explorer; Listed in ms775147(v=vs.85) - Progressive JPEG, initiated before global browser support for progressive JPEGs (Microsoft and Firefox).</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ImageJpeg">
            <summary>JPEG JFIF image; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextXJqueryTmpl">
            <summary>jQuery template data</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndGoogleEarthKmlXml">
            <summary>KML files (e.g. for Google Earth)</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXLatex">
            <summary>LaTeX files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.VideoXMatroska">
            <summary>Matroska open media format</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndOpenxmlformatsOfficedocumentSpreadsheetmlSheet">
            <summary>Microsoft Excel 2007 files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndMsExcel">
            <summary>Microsoft Excel files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndOpenxmlformatsOfficedocumentPresentationmlPresentation">
            <summary>Microsoft Powerpoint 2007 files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndMsPowerpoint">
            <summary>Microsoft Powerpoint files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndOpenxmlformatsOfficedocumentWordprocessingmlDocument">
            <summary>Microsoft Word 2007 files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationMsword">
            <summary>Microsoft Word files[15]</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MultipartAlternative">
            <summary>MIME Email; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MultipartMixed">
            <summary>MIME Email; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MultipartRelated">
            <summary>MIME Email; Defined in RFC 2387 and used by MHTML (HTML mail)</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.MultipartFormData">
            <summary>MIME Webform; Defined in RFC 2388</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndMozillaXulXml">
            <summary>Mozilla XUL files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioMpeg">
            <summary>MP3 or other MPEG audio; Defined in RFC 3003</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioMp4">
            <summary>MP4 audio</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.VideoMp4">
            <summary>MP4 video; Defined in RFC 4337</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.VideoMpeg">
            <summary>MPEG-1 video with multiplexed audio; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ModelMesh">
            <summary>MSH files, MESH files; Defined in RFC 2077, SILO files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioBasic">
            <summary>mulaw audio at 8 kHz, 1 channel; Defined in RFC 2046</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.VideoOgg">
            <summary>Ogg Theora or other video (with audio); Defined in RFC 5334</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioOgg">
            <summary>Ogg Vorbis, Speex, Flac and other audio; Defined in RFC 5334</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationOgg">
            <summary>Ogg, a multimedia bitstream container format; Defined in RFC 5334</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXopXml">
            <summary>OP</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndOasisOpendocumentGraphics">
            <summary>OpenDocument Graphics; Registered[14]</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndOasisOpendocumentPresentation">
            <summary>OpenDocument Presentation; Registered[13]</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndOasisOpendocumentSpreadsheet">
            <summary>OpenDocument Spreadsheet; Registered[12]</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationVndOasisOpendocumentText">
            <summary>OpenDocument Text; Registered[11]</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXPkcs12">
            <summary>p12 files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXPkcs7Certificates">
            <summary>p7b and spc files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXPkcs7Mime">
            <summary>p7c files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXPkcs7Certreqresp">
            <summary>p7r files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXPkcs7Signature">
            <summary>p7s files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationPdf">
            <summary>Portable Document Format, PDF has been in use for document exchange on the Internet since 1993; Defined in RFC 3778</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ImagePng">
            <summary>Portable Network Graphics; Registered,[8] Defined in RFC 2083</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationPostscript">
            <summary>PostScript; Defined in RFC 2046</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.VideoQuicktime">
            <summary>QuickTime video; Registered[10]</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXRarCompressed">
            <summary>RAR archive files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioVndRnRealaudio">
            <summary>RealAudio; Documented in RealPlayer Customer Support Answer 2559</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationRdfXml">
            <summary>Resource Description Framework; Defined by RFC 3870</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationRssXml">
            <summary>RSS feeds</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationSoapXml">
            <summary>SOAP; Defined by RFC 3902</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXStuffit">
            <summary>StuffIt archive files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ImageSvgXml">
            <summary>SVG vector image; Defined in SVG Tiny 1.2 Specification Appendix M</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ImageTiff">
            <summary>Tag Image File Format (only for Baseline TIFF); Defined in RFC 3302</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXTar">
            <summary>Tarball files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextPlain">
            <summary>Textual data; Defined in RFC 2046 and RFC 3676</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXFontTtf">
            <summary>TrueType Font No registered MIME type, but this is the most commonly used</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.TextVcard">
            <summary>vCard (contact information); Defined in RFC 6350</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioVorbis">
            <summary>Vorbis encoded audio; Defined in RFC 5215</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioVndWave">
            <summary>WAV audio; Defined in RFC 2361</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationFontWoff">
            <summary>Web Open Font Format; (candidate recommendation; use application/x-font-woff until standard is official)</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.VideoWebm">
            <summary>WebM Matroska-based open media format</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioWebm">
            <summary>WebM open media format</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioXMsWax">
            <summary>Windows Media Audio Redirector; Documented in Microsoft help page</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.AudioXMsWma">
            <summary>Windows Media Audio; Documented in Microsoft KB 288102</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.VideoXMsWmv">
            <summary>Windows Media Video; Documented in Microsoft KB 288102</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ModelVrml">
            <summary>WRL files, VRML files; Defined in RFC 2077</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ModelX3DXml">
            <summary>X3D ISO standard for representing 3D computer graphics, X3D XML files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ModelX3DBinary">
            <summary>X3D ISO standard for representing 3D computer graphics, X3DB binary files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ModelX3DVrml">
            <summary>X3D ISO standard for representing 3D computer graphics, X3DV VRML files</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationXhtmlXml">
            <summary>XHTML; Defined by RFC 3236</summary>
        </member>
        <member name="F:Snow.Template.Net.MimeTypes.MimeTypeNames.ApplicationZip">
            <summary>ZIP archive files; Registered[7]</summary>
        </member>
        <member name="M:Snow.Template.Parameters.ParameterAppService.GetForEdit(Abp.Application.Services.Dto.NullableIdDto{System.Guid})">
            <summary>
            获取用户修改信息
            </summary>
            <param name="input">id</param>
            <returns></returns>
        </member>
        <member name="P:Snow.Template.ParameterManager.ParameterTypes.Dto.ParameterTypeSelectListDto.IsSelected">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="T:Snow.Template.TemplateAppServiceBase">
            <summary>
            Derive your application services from this class.
            </summary>
        </member>
    </members>
</doc>
