@using Abp.Authorization.Users
@using Zhn.Template.Authorization.Users
@model Zhn.Template.Web.Models.Roles.CreateOrEditRoleModalViewModel
<ul class="nav nav-tabs" role="tablist">
    <li class="nav-item">
        <a href="#UserInformationsTab" class="nav-link active" data-toggle="tab" role="tab">
            @L("RoleInformations")
        </a>
    </li>
    <li class="nav-item">
        <a href="#RolesTab" data-toggle="tab" role="tab" class="nav-link">
            @L("Permissions")
        </a>
    </li>
</ul>
<div class="tab-content">
    <div class="tab-pane active" id="RoleInformationsTab" role="tabpanel">
        <form id="modelForm" name="RoleInformationsForm" role="form" novalidate>
            @if (Model.IsEditMode)
            {
                <input type="hidden" name="Id" value="@Model.Role.Id" />
            }
            <div class="form-group">
                <label asp-for="Role.DisplayName"></label>
                <input asp-for="Role.DisplayName" type="text" class="form-control" placeholder="@Html.DisplayNameFor(model => model.Role.DisplayName)">
                <span asp-validation-for="Role.DisplayName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Role.IsDefault"></label>
                <input asp-for="Role.IsDefault" type="checkbox" value="true" class="form-control" placeholder="@Html.DisplayNameFor(model => model.Role.IsDefault)">
                <span class="help-block">@L("DefaultRole_Description")</span>
            </div>
        </form>
    </div>
    <div class="tab-pane" id="PermissionsTab" role="tabpanel">
        @*@await Html.PartialAsync("~/Areas/AppAreaName/Views/Common/_PermissionTree.cshtml", Model)*@
    </div>
</div>
<script type="text/javascript">
    $.validator.unobtrusive.parse('form');
</script>